swagger: "2.0"
info:
  description: "This is the CORE API server to manage patient's appointments for each dialysis center under ACME Corp"
  version: "1.0.0"
  title: "ACME corp"
  termsOfService: "http://swagger.io/terms/"
  contact:
    email: "sirisha.samudrala@hashedin.com"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "localhost:8000"
basePath: "/"
tags:
- name: "patients"
  description: "Manage the patients"
- name: "centers"
  description: "Manager all the dialysis centers"
schemes:
- "https"
- "http"
paths:
  /patient:
    get:
      tags:
      - "patients"
      summary: "Get all patients"
      description: ""
      operationId: "getPatients"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      responses:
        200:
          description: "Fetched Patients list"
          items:
            type: "array"
        400:
          description: "Failed to fetch"
      security:
      - api_key: []
    post:
      tags:
      - "patients"
      summary: "Add a patient / update an existing patient info"
      description: ""
      operationId: "CreateUpdatePatient"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Patient object that needs to be added to/ modifief in the DB"
        required: true
        schema:
          type: "array"
      responses:
        400:
          description: "Failed to Modify"
        200:
          description: "Succefully inserted/ updated a row"
      security:
      - api_key: []
  /patient/{Id}:
    get:
      tags:
      - "patients"
      summary: "Find patient by ID"
      description: "Returns a single patient"
      operationId: "getPatientById"
      produces:
      - "application/json"
      parameters:
      - name: "Id"
        in: "path"
        description: "ID of patient to return"
        required: true
        type: "integer"
        format: "int64"
      responses:
        200:
          description: "successfully fetched patient:<ID>"
          schema:
            type: "string"
        400:
          description: "Failed to Fetch patient:<ID>"
      security:
      - api_key: []
  /center:
    get:
      tags:
      - "centers"
      summary: "Get all dialysis centers"
      description: ""
      operationId: "getDialysisCenters"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      responses:
        200:
          description: "Fetched Centers list"
          items:
            type: "array"
        400:
          description: "Failed to fetch"
      security:
      - api_key: []
    post:
      tags:
      - "centers"
      summary: "Add a dialysis center / update an existing center info"
      description: ""
      operationId: "CreateUpdateCenter"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Patient object that needs to be added to/ modifief in the DB"
        required: true
        schema:
          type: "array"
      responses:
        400:
          description: "Failed to Modify"
        200:
          description: "Succefully inserted/ updated a row"
      security:
      - api_key: []
  /center/{Id}:
    get:
      tags:
      - "centers"
      summary: "Find dialysis center info by ID"
      description: "Returns a single dialysis center"
      operationId: "getCenterById"
      produces:
      - "application/json"
      parameters:
      - name: "Id"
        in: "path"
        description: "ID of center to return"
        required: true
        type: "integer"
        format: "int64"
      responses:
        200:
          description: "successfully fetched dialysis center:<ID>"
          schema:
            type: "string"
        400:
          description: "Failed to Fetch dialysis center:<ID>"
      security:
      - api_key: []

securityDefinitions:
  petstore_auth:
    type: "oauth2"
    authorizationUrl: "localhost:8000/admin/"
    flow: "implicit"
    scopes:
      write:pets: "modify attributes in your account"
      read:pets: "read attributes"
  api_key:
    type: "apiKey"
    name: "api_key"
    in: "header"
definitions:
  Patients:
    type: "object"
    properties:
      pat_id:
        type: "integer"
        format: "int64"
      pat_name:
        type: "string"
        description: "Patient Name"
      age:
        type: "string"
        description: "Patient's age"
      last_dialysis:
        type: "string"
        format: "date-time"
      next_dialysis:
        type: "string"
        format: "date-time"
      start_dialysis:
        type: "string"
        format: "date-time"
      end_dialysis:
        type: "string"
        format: "date-time"
      freq_dialysis:
        type: "integer"
        format: "int64"
      pref_days:
        type: "string"
        description: "Prefereed days for dialysis"
      pref_time:
        type: "string"
        format: "time"
      duration:
        type: "integer"
        format: "int64"
      registered_date:
        type: "string"
        format: "date-time"
      medical_cond:
        type: "string"
        description: "Patient's medical condition(any other diseases like nausea)"
      flag:
        type: "boolean"
        default: false
        description: "Status of the patient"
  Centers:
    type: "object"
    properties:
      cen_id:
        type: "integer"
        format: "int64"
      cen_location:
        type: "string"
        description: "Dialysis center location"
      cen_slots:
        type: "integer"
        format: "int64"
        description: "No.of slots available for dialysis"
  ApiResponse:
    type: "object"
    properties:
      status_code:
        type: "integer"
        format: "int32"
      results:
        type: "array"
        items:
          type: "object"
      message:
        type: "string"
